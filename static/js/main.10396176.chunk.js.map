{"version":3,"sources":["containers/toDoReducer.js","components/ToDoListItem.js","components/ToDoList.js","components/ToDoAdd.js","hooks/useForm.js","components/ToDoApp.js","reportWebVitals.js","index.js"],"names":["toDoReducer","state","action","type","payload","filter","item","id","map","done","ToDoListItem","index","desc","handleTogggle","handleDelete","className","onClick","ToDoList","toDo","ToDoAdd","handleAdd","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","ToDoApp","useReducer","dispath","useEffect","setItem","stringify","newToDo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10396176.chunk.js","sourcesContent":["/** \r\n * @author: alexandercddev\r\n * @description: \r\n * @date: 06/Octubre/2021\r\n**/ \r\n\r\nconst toDoReducer = ( state = [], action) => {\r\n    switch (action?.type) {\r\n        case 'add': \r\n            return [ ...state, action.payload]; \r\n        case 'delete': \r\n            return state.filter( item => item.id !== action.payload);\r\n        case 'toggle':\r\n            return state.map( item => (\r\n                ( item.id === action.payload )\r\n                ? {...item, done: !item.done}\r\n                : item\r\n            ));\r\n        case 'toggle-old':\r\n            return state.map( item => {\r\n                if(item.id === action.payload) {\r\n                    return {\r\n                        ...item,\r\n                        done: !item.done\r\n                    }\r\n                } else {\r\n                return item;\r\n\r\n                }\r\n            });\r\n        default:\r\n            return  state;\r\n    }\r\n}\r\n\r\nexport {\r\n    toDoReducer\r\n}\r\n","/** \r\n * @author: alexandercddev\r\n * @description: \r\n * @date: 06/Octubre/2021\r\n**/\r\nimport React from 'react'\r\n\r\nexport const ToDoListItem = ( { index, id, desc, done, handleTogggle, handleDelete } ) => {\r\n    return (\r\n        <li className=\"list-group-item\" >\r\n            <p \r\n                className={done ? 'complete' : ''}\r\n                onClick={() => handleTogggle(id) }\r\n            >\r\n                {index + 1}.- {desc}\r\n            </p>\r\n            <button\r\n                onClick={() => handleDelete(id) }\r\n                className=\"btn btn-danger btn-noBlock\"\r\n            >\r\n                Borrar\r\n            </button> \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ToDoListItem;","/** \r\n * @author: alexandercddev\r\n * @description: \r\n * @date: 06/Octubre/2021\r\n**/\r\nimport React from 'react'\r\nimport ToDoListItem from './ToDoListItem'\r\n\r\nexport const ToDoList = ( { toDo, handleDelete, handleTogggle}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {toDo.map( (item, index) => (\r\n                <ToDoListItem \r\n                    key={item.id}\r\n                    index={index}\r\n                    {...item}\r\n                    handleDelete={handleDelete}\r\n                    handleTogggle={handleTogggle}\r\n                />\r\n            ))}\r\n        </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default ToDoList;","/** \r\n * @author: alexandercddev\r\n * @description: \r\n * @date: 06/Octubre/2021\r\n**/\r\nimport React from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const ToDoAdd = ({ handleAdd }) => {\r\n    const [ { description }, handleInputChange, reset ] = useForm ({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( description.trim().length <= 1 ) {\r\n            return;\r\n        }  \r\n        handleAdd({\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        });\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input \r\n                type=\"text\"\r\n                name=\"description\"\r\n                className=\"form-control\"\r\n                placeholder=\"Lerning...\"\r\n                autoComplete=\"off\"\r\n                value={description}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-success mt-2 btn-block\"\r\n            >\r\n                Agregar\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoAdd;\r\n","/** \r\n * @author: alexandercddev\r\n * @description: \r\n * @date: 30/Septiembre/2021\r\n**/\r\nimport { useState} from 'react'\r\n\r\nexport const useForm = (initialState) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n    const handleInputChange = ({target}) => { \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }; \r\n    return  [values, handleInputChange, reset];\r\n} ","/** \r\n * @author: alexandercddev\r\n * @description: \r\n * @date: 06/Octubre/2021\r\n**/\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { toDoReducer } from '../containers/toDoReducer';\r\n \r\nimport ToDoList from './ToDoList';\r\nimport ToDoAdd from './ToDoAdd';\r\n \r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('toDo')) || [\r\n        {\r\n            id: new Date().getTime(),\r\n            desc: 'Learn React',\r\n            done: false\r\n        }\r\n    ];\r\n}\r\n\r\nexport const ToDoApp = () => {\r\n    const [ toDo, dispath ] = useReducer(toDoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('toDo', JSON.stringify(toDo));\r\n    }, [toDo]); \r\n\r\n    const handleAdd = ( newToDo) => {\r\n        dispath({\r\n            type: 'add',\r\n            payload: newToDo\r\n        });\r\n    } \r\n\r\n    const handleDelete = (id) => { \r\n        dispath({\r\n            type: 'delete',\r\n            payload: id\r\n        });\r\n    } \r\n    \r\n    const handleTogggle = (id) => { \r\n        dispath( {\r\n            type: 'toggle',\r\n            payload: id\r\n        });\r\n    } \r\n\r\n    return (\r\n        <div \r\n            className=\"todo-app animate__animated animate__backInDown\"\r\n        >\r\n            <h1>ToDo App ({ toDo.length })</h1>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-7\" >\r\n                    <ToDoList \r\n                        toDo={toDo}\r\n                        handleDelete={handleDelete}\r\n                        handleTogggle={handleTogggle}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-5 m-t\">\r\n                    <h4>Add ToDo</h4>\r\n                    <hr></hr>\r\n                    <ToDoAdd \r\n                        handleAdd={handleAdd}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoApp;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport ToDoApp from './components/ToDoApp';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/sass/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}